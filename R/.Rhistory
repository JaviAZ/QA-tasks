train$Education[train$Education %in% c("Masters")] <- 6
train$Education[train$Education %in% c("Doctorate")] <- 7
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education))))
fit <- rpart(Salary~Age+Sex+Education+Workclass, data = train)
fancyRpartPlot(fit)
fancyRpartPlot(fit)
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
test <- read.csv("censusData_test.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
train$Education <- factor(train$Education, levels = c(unique(as.character(train$Education)),1,2,3,4,5,6,7))
train$Education[train$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
train$Education[train$Education %in% c("12th", "HS-grad")] <- 2
train$Education[train$Education %in% c("Prof-school")] <- 3
train$Education[train$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
train$Education[train$Education %in% c("Some-college","Bachelors")] <- 5
train$Education[train$Education %in% c("Masters")] <- 6
train$Education[train$Education %in% c("Doctorate")] <- 7
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education))))
fit <- rpart(Salary~Age+Sex+Education+Workclass, data = train)
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
test <- read.csv("censusData_test.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
train$Education <- factor(train$Education, levels = c(unique(as.character(train$Education)),1,2,3,4,5,6,7))
train$Education[train$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
train$Education[train$Education %in% c("12th", "HS-grad")] <- 2
train$Education[train$Education %in% c("Prof-school")] <- 3
train$Education[train$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
train$Education[train$Education %in% c("Some-college","Bachelors")] <- 5
train$Education[train$Education %in% c("Masters")] <- 6
train$Education[train$Education %in% c("Doctorate")] <- 7
train$Education <-  factor(train$Education, levels = c(unique(as.numeric(train$Education))))
fit <- rpart(Salary~Age+Sex+Education+Workclass, data = train)
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
test <- read.csv("censusData_test.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <-  factor(test$Education, levels = c(unique(as.numeric(test$Education))))
fit <- rpart(Salary~Age+Sex+Education+Workclass, data = train)
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
prediction
test <- read.csv("censusData_test.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
View(test)
View(test)
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <-  factor(test$Education, levels = c(unique(as.numeric(test$Education))))
test <- read.csv("censusData_test.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <-  factor(test$Education, levels = c(unique(as.character(test$Education))))
fit <- rpart(Salary~Age+Sex+Education+Workclass, data = train)
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
fit <- rpart(Salary~Age+Sex+Education+Workclass, data = train)
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
fancyRpartPlot(fit)
fit <- rpart(Salary~Age+Sex+Education+Workclass+CapitalGain, data = train)
fancyRpartPlot(fit)
fit <- rpart(Salary~Age+Sex+Education+Workclass+CapitalGain+CapitalLoss, data = train)
fancyRpartPlot(fit)
fit <- rpart(Salary~Age+Sex+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
fancyRpartPlot(fit)
fit <- rpart(Salary~Age+Sex+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
fancyRpartPlot(fit)
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
fancyRpartPlot(fit)
RpartPlot(fit)
fancyRpartPlot(fit)
View(educSorted)
print(train)
train
View(educSorted)
salaryPredsTrain <- function(){
#http://cseweb.ucsd.edu/classes/sp15/cse190-c/reports/sp15/048.pdf
#https://www.rdocumentation.org/packages/arules/versions/1.6-3/topics/Adult
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass))))
ages <- cut(train$Age, breaks = c(0,20,29, 36, 49,59,Inf), labels = c("17-20","21-29","30-36","37-49","50-59","60-90"))
#train$Age[train$Age > 0  && train$Age < 20] <- 17.20
#train$Age[as.numeric(train$Age) > 19 && as.numeric(train$Age) < 30] <- 21.29
#train$Age[as.numeric(train$Age) > 29 && as.numeric(train$Age) < 37] <- 30.36
#train$Age[as.numeric(train$Age) > 36 && as.numeric(train$Age) < 50] <- 37.49
#train$Age[as.numeric(train$Age) > 49 && as.numeric(train$Age) < 60] <- 50.59
#train$Age[as.numeric(train$Age) > 59 && as.numeric(train$Age) < 99] <- 60.90
#train$Age <- factor(train$Age, levels = c(unique(as.numeric(train$Age))))
#Pre-highschool("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")<highschool("12th", "HS-grad")<Prof-school("Prof-school","Assoc-acdm","Assoc-voc")<Grad("Some-college","Bachelors")<Masters<Doctorate
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education)),1,2,3,4,5,6,7))
train$Education[train$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
train$Education[train$Education %in% c("12th", "HS-grad")] <- 2
train$Education[train$Education %in% c("Prof-school")] <- 3
train$Education[train$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
train$Education[train$Education %in% c("Some-college","Bachelors")] <- 5
train$Education[train$Education %in% c("Masters")] <- 6
train$Education[train$Education %in% c("Doctorate")] <- 7
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education))))
educSorted <- train
educSorted$Education <- factor(train$Education, levels = c(unique(as.numeric(train$Education))), ordered = TRUE)
par(mfrow = c(2,2))
plot(educSorted$Salary~educSorted$Education, main = "Salary VS Education", ylab = "Salary", xlab = "Education")
plot(train$Salary~ages, main = "Salary VS Ages", ylab = "Salary", xlab = "Ages")
plot(train$Salary~train$Sex, main = "Salary VS Sex", ylab = "Salary", xlab = "Sex")
sexVSsalary  <- prop.table(table(train$Sex,train$Salary),1)
agesVSsalary <- prop.table(table(ages,train$Salary),1)
educVSsalary <- prop.table(table(educSorted$Education,educSorted$Salary),1)
sexAbove50 <- c(sexVSsalary [,2])
agesAbove50<- c(agesVSsalary[,2])
educAbove50<- c(educVSsalary[,2])
}
salaryPredsTest<- function(){
test <- read.csv("censusData_test.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <-  factor(test$Education, levels = c(unique(as.character(test$Education))))
par(mfrow = c(1,1))
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
}
salaryPredsTrain()
salaryPredsTest()
plot(train$Salary~train$HoursPerWeek)
boxplot(train$Salary~train$HoursPerWeek)
boxplot(train$Salary,train$HoursPerWeek)
HoursPerWeek
plot(train$Salary~train$HoursPerWeek)
plot(train$Salary~train$CapitalGain)
plot(train$Salary~train$CapitalLoss)
plot(train$Salary~train$Occupation)
par(mfrow = c(2,2))
plot(educSorted$Salary~educSorted$Education, main = "Salary VS Education", ylab = "Salary", xlab = "Education")
plot(train$Salary~ages, main = "Salary VS Ages", ylab = "Salary", xlab = "Ages")
plot(train$Salary~train$Sex, main = "Salary VS Sex", ylab = "Salary", xlab = "Sex")
par(mfrow = c(2,2))
plot(educSorted$Salary~educSorted$Education, main = "Salary VS Education", ylab = "Salary", xlab = "Education")
plot(train$Salary~ages, main = "Salary VS Ages", ylab = "Salary", xlab = "Ages")
plot(train$Salary~train$Sex, main = "Salary VS Sex", ylab = "Salary", xlab = "Sex")
fancyRpartPlot(fit)
par(mfrow = c(2,2))
plot(educSorted$Salary~educSorted$Education, main = "Salary VS Education", ylab = "Salary", xlab = "Education")
plot(train$Salary~ages, main = "Salary VS Ages", ylab = "Salary", xlab = "Ages")
plot(train$Salary~train$Sex, main = "Salary VS Sex", ylab = "Salary", xlab = "Sex")
par(mfrow = c(1,1))
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
par(mfrow = c(1,1))
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
fancyRpartPlot(fit)
prediction
test <- read.csv("censusData_trainCopy.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education))))
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
table(prediction,train$Salary)
realSalary <- train$Salary
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass))))
ages <- cut(train$Age, breaks = c(0,20,29, 36, 49,59,Inf), labels = c("17-20","21-29","30-36","37-49","50-59","60-90"))
#train$Age[train$Age > 0  && train$Age < 20] <- 17.20
#train$Age[as.numeric(train$Age) > 19 && as.numeric(train$Age) < 30] <- 21.29
#train$Age[as.numeric(train$Age) > 29 && as.numeric(train$Age) < 37] <- 30.36
#train$Age[as.numeric(train$Age) > 36 && as.numeric(train$Age) < 50] <- 37.49
#train$Age[as.numeric(train$Age) > 49 && as.numeric(train$Age) < 60] <- 50.59
#train$Age[as.numeric(train$Age) > 59 && as.numeric(train$Age) < 99] <- 60.90
#train$Age <- factor(train$Age, levels = c(unique(as.numeric(train$Age))))
#Pre-highschool("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")<highschool("12th", "HS-grad")<Prof-school("Prof-school","Assoc-acdm","Assoc-voc")<Grad("Some-college","Bachelors")<Masters<Doctorate
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education)),1,2,3,4,5,6,7))
train$Education[train$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
train$Education[train$Education %in% c("12th", "HS-grad")] <- 2
train$Education[train$Education %in% c("Prof-school")] <- 3
train$Education[train$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
train$Education[train$Education %in% c("Some-college","Bachelors")] <- 5
train$Education[train$Education %in% c("Masters")] <- 6
train$Education[train$Education %in% c("Doctorate")] <- 7
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education))))
educSorted <- train
educSorted$Education <- factor(train$Education, levels = c(unique(as.numeric(train$Education))), ordered = TRUE)
test <- read.csv("censusData_trainCopy.csv", header = TRUE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test <- read.csv("censusData_trainCopy.csv", header = FALSE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education))))
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
table(prediction,train$Salary)
View(test)
len(prediction[prediction == ">50"])
length(prediction[prediction == ">50"])
length(prediction[">50"])
sum(prediction[">50"])
prediction == train$Salary
prop.table(prediction==train$Salary)
sum(prediction==train$Salary)
sum(prediction==train$Salary)/length(prediction)
accuarcy <- sum(prediction==train$Salary)/length(prediction)
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+HoursPerWeek, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
accuarcy <- sum(prediction==train$Salary)/length(prediction)
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek+Sex, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
accuarcy <- sum(prediction==train$Salary)/length(prediction)
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek+Sex+Occupation, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
accuarcy <- sum(prediction==train$Salary)/length(prediction)
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
accuarcy <- sum(prediction==train$Salary)/length(prediction)
salaryPredsTrain <- function(){
#http://cseweb.ucsd.edu/classes/sp15/cse190-c/reports/sp15/048.pdf
#https://www.rdocumentation.org/packages/arules/versions/1.6-3/topics/Adult
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass))))
ages <- cut(train$Age, breaks = c(0,20,29, 36, 49,59,Inf), labels = c("17-20","21-29","30-36","37-49","50-59","60-90"))
#train$Age[train$Age > 0  && train$Age < 20] <- 17.20
#train$Age[as.numeric(train$Age) > 19 && as.numeric(train$Age) < 30] <- 21.29
#train$Age[as.numeric(train$Age) > 29 && as.numeric(train$Age) < 37] <- 30.36
#train$Age[as.numeric(train$Age) > 36 && as.numeric(train$Age) < 50] <- 37.49
#train$Age[as.numeric(train$Age) > 49 && as.numeric(train$Age) < 60] <- 50.59
#train$Age[as.numeric(train$Age) > 59 && as.numeric(train$Age) < 99] <- 60.90
#train$Age <- factor(train$Age, levels = c(unique(as.numeric(train$Age))))
#Pre-highschool("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")<highschool("12th", "HS-grad")<Prof-school("Prof-school","Assoc-acdm","Assoc-voc")<Grad("Some-college","Bachelors")<Masters<Doctorate
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education)),1,2,3,4,5,6,7))
train$Education[train$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
train$Education[train$Education %in% c("12th", "HS-grad")] <- 2
train$Education[train$Education %in% c("Prof-school")] <- 3
train$Education[train$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
train$Education[train$Education %in% c("Some-college","Bachelors")] <- 5
train$Education[train$Education %in% c("Masters")] <- 6
train$Education[train$Education %in% c("Doctorate")] <- 7
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education))))
educSorted <- train
educSorted$Education <- factor(train$Education, levels = c(unique(as.numeric(train$Education))), ordered = TRUE)
par(mfrow = c(2,2))
plot(educSorted$Salary~educSorted$Education, main = "Salary VS Education", ylab = "Salary", xlab = "Education")
plot(train$Salary~ages, main = "Salary VS Ages", ylab = "Salary", xlab = "Ages")
plot(train$Salary~train$Sex, main = "Salary VS Sex", ylab = "Salary", xlab = "Sex")
sexVSsalary  <- prop.table(table(train$Sex,train$Salary),1)
agesVSsalary <- prop.table(table(ages,train$Salary),1)
educVSsalary <- prop.table(table(educSorted$Education,educSorted$Salary),1)
sexAbove50 <- c(sexVSsalary [,2])
agesAbove50<- c(agesVSsalary[,2])
educAbove50<- c(educVSsalary[,2])
}
salaryPredsTest<- function(){
test <- read.csv("censusData_trainCopy.csv", header = FALSE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education))))
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
accuarcy <- sum(prediction==train$Salary)/length(prediction)
print(accuarcy)
}
salaryPredsTrain()
salaryPredsTest()
train <- salaryPredsTrain()
salaryPredsTest(train)
#http://cseweb.ucsd.edu/classes/sp15/cse190-c/reports/sp15/048.pdf
#https://www.rdocumentation.org/packages/arules/versions/1.6-3/topics/Adult
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass))))
ages <- cut(train$Age, breaks = c(0,20,29, 36, 49,59,Inf), labels = c("17-20","21-29","30-36","37-49","50-59","60-90"))
#train$Age[train$Age > 0  && train$Age < 20] <- 17.20
#train$Age[as.numeric(train$Age) > 19 && as.numeric(train$Age) < 30] <- 21.29
#train$Age[as.numeric(train$Age) > 29 && as.numeric(train$Age) < 37] <- 30.36
#train$Age[as.numeric(train$Age) > 36 && as.numeric(train$Age) < 50] <- 37.49
#train$Age[as.numeric(train$Age) > 49 && as.numeric(train$Age) < 60] <- 50.59
#train$Age[as.numeric(train$Age) > 59 && as.numeric(train$Age) < 99] <- 60.90
#train$Age <- factor(train$Age, levels = c(unique(as.numeric(train$Age))))
#Pre-highschool("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")<highschool("12th", "HS-grad")<Prof-school("Prof-school","Assoc-acdm","Assoc-voc")<Grad("Some-college","Bachelors")<Masters<Doctorate
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education)),1,2,3,4,5,6,7))
train$Education[train$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
train$Education[train$Education %in% c("12th", "HS-grad")] <- 2
train$Education[train$Education %in% c("Prof-school")] <- 3
train$Education[train$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
train$Education[train$Education %in% c("Some-college","Bachelors")] <- 5
train$Education[train$Education %in% c("Masters")] <- 6
train$Education[train$Education %in% c("Doctorate")] <- 7
train$Education <-  factor(train$Education, levels = c(unique(as.character(train$Education))))
educSorted <- train
educSorted$Education <- factor(train$Education, levels = c(unique(as.numeric(train$Education))), ordered = TRUE)
par(mfrow = c(2,2))
plot(educSorted$Salary~educSorted$Education, main = "Salary VS Education", ylab = "Salary", xlab = "Education")
plot(train$Salary~ages, main = "Salary VS Ages", ylab = "Salary", xlab = "Ages")
plot(train$Salary~train$Sex, main = "Salary VS Sex", ylab = "Salary", xlab = "Sex")
sexVSsalary  <- prop.table(table(train$Sex,train$Salary),1)
agesVSsalary <- prop.table(table(ages,train$Salary),1)
educVSsalary <- prop.table(table(educSorted$Education,educSorted$Salary),1)
sexAbove50 <- c(sexVSsalary [,2])
agesAbove50<- c(agesVSsalary[,2])
educAbove50<- c(educVSsalary[,2])
test <- read.csv("censusData_trainCopy.csv", header = FALSE)
colnames(test) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry")
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass)),"Unemployed"))
test$Workclass[test$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
test$Workclass <-  factor(test$Workclass, levels = c(unique(as.character(test$Workclass))))
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education)),1,2,3,4,5,6,7))
test$Education[test$Education %in% c("Preschool","1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th")] <- 1
test$Education[test$Education %in% c("12th", "HS-grad")] <- 2
test$Education[test$Education %in% c("Prof-school")] <- 3
test$Education[test$Education %in% c("Assoc-acdm","Assoc-voc")] <- 4
test$Education[test$Education %in% c("Some-college","Bachelors")] <- 5
test$Education[test$Education %in% c("Masters")] <- 6
test$Education[test$Education %in% c("Doctorate")] <- 7
test$Education <- factor(test$Education, levels = c(unique(as.character(test$Education))))
fit <- rpart(Salary~Age+Education+Workclass+CapitalGain+CapitalLoss+HoursPerWeek, data = train)
par(mfrow = c(1,1))
fancyRpartPlot(fit)
prediction <- predict(fit,test,type='class')
accuarcy <- sum(prediction==train$Salary)/length(prediction)
print(accuarcy)
RawBCD <- read.table("breast-cancer-wisconsin.data")
View(RawBCD)
RawBCD <- read.csv("breast-cancer-wisconsin.data")
View(RawBCD)
View(RawBCD)
RawBCD <- read.csv("breast-cancer-wisconsin.data", header = FALSE)
View(RawBCD)
RawBCD <- read.csv("BreastCancerData.data", header = FALSE)
source('C:/Users/Admin/Desktop/QAExercises/R/BreastCancerKNNExample.R', echo=TRUE)
RawBCD <- read.csv("BreastCancerData.data")
RawBCD <- read.table("BreastCancerData.data")
RawBCD <- read.table("BreastCancerData.data", sep=",")
BCD_Noid <- RawBCD[,-1]
View(BCD_Noid)
RawBCD <- read.table("BreastCancerData.data", sep=",")
colnames(RawBCD) <- c("id", "result", "meanRadius", "meanTexture", "meanPerimeter","meanArea",
"meanSmoothness","meanCompactness","meanConcativity","meanConcavePoints",
"meanSymmetry","meanFractalDimension","seRadius","seTexture","meanPerimeter",
"seArea","seSmoothness","seCompactness","seConcativity",
"seConcavePoints","seSymmetry","seFractalDimension","worstRadius",
"worstTexture","meanPerimeter","worstArea","worstSmoothness","worstCompactness",
"worstConcativity","worstConcavePoints","worstSymmetry","worstFractalDimension")
BCD_Noid <- RawBCD[,-1]
library(class)
library(ggplot2)
RawBCD <- read.table("BreastCancerData.data", sep=",")
colnames(RawBCD) <- c("id", "result", "meanRadius", "meanTexture", "meanPerimeter","meanArea",
"meanSmoothness","meanCompactness","meanConcativity","meanConcavePoints",
"meanSymmetry","meanFractalDimension","seRadius","seTexture","meanPerimeter",
"seArea","seSmoothness","seCompactness","seConcativity",
"seConcavePoints","seSymmetry","seFractalDimension","worstRadius",
"worstTexture","meanPerimeter","worstArea","worstSmoothness","worstCompactness",
"worstConcativity","worstConcavePoints","worstSymmetry","worstFractalDimension")
BCD_Noid <- RawBCD[,-1]
View(RawBCD)
library(class)
library(ggplot2)
RawBCD <- read.table("BreastCancerData.data", sep=",")
colnames(RawBCD) <- c("id", "result", "meanRadius", "meanTexture", "meanPerimeter","meanArea",
"meanSmoothness","meanCompactness","meanConcativity","meanConcavePoints",
"meanSymmetry","meanFractalDimension","seRadius","seTexture","meanPerimeter",
"seArea","seSmoothness","seCompactness","seConcativity",
"seConcavePoints","seSymmetry","seFractalDimension","worstRadius",
"worstTexture","meanPerimeter","worstArea","worstSmoothness","worstCompactness",
"worstConcativity","worstConcavePoints","worstSymmetry","worstFractalDimension")
#ID is not relevant so get rid off it
BCD_Noid <- RawBCD[,-1]
#Results are not relevant
BCD_NoResults <- BCD_Noid[,-1]
#Feature Scalling function
FeatureScalling <- function(x) { ((x-min(x))/(max(x)-min(x))) }
#Data normalised according to function
BCD_Normalised <- as.data.frame(lapply(BCD_NoResults, FeatureScalling))
#Split data for training and testing doing 75:25 (ish) split
BCD_Train <- BCD_Normalised[1:450,]
BCD_Test  <- BCD_Normalised[451:569,]
#Compute k-value to use with the classifier. Rule of thumb is square root of n of observations
k_value <- floor(sqrt(length(BCD_Train[,1])))
#Now use KNN Algorithm in class package to classify data
BCD_Predictions <- knn(BCD_Train, BCD_Test, BCD_Noid[1:450,1], k=k_value)
#Performance shown as TP,FP/FN,TN
#Reference data into dataframe
BCD_Reference <- BCD_Noid[451:569,1]
#Compare results
table(BCD_Predictions,BCD_Reference)
source('C:/Users/Admin/Desktop/QAExercises/R/BreastCancerKNNExample.R', echo=TRUE)
library(class)
library(ggplot2)
RawBCD <- read.table("BreastCancerData.data", sep=",")
colnames(RawBCD) <- c("id", "result", "meanRadius", "meanTexture", "meanPerimeter","meanArea",
"meanSmoothness","meanCompactness","meanConcativity","meanConcavePoints",
"meanSymmetry","meanFractalDimension","seRadius","seTexture","meanPerimeter",
"seArea","seSmoothness","seCompactness","seConcativity",
"seConcavePoints","seSymmetry","seFractalDimension","worstRadius",
"worstTexture","meanPerimeter","worstArea","worstSmoothness","worstCompactness",
"worstConcativity","worstConcavePoints","worstSymmetry","worstFractalDimension")
#ID is not relevant so get rid off it
BCD_Noid <- RawBCD[,-1]
#Results are not relevant
BCD_NoResults <- BCD_Noid[,-1]
#Feature Scalling function
FeatureScalling <- function(x) { ((x-min(x))/(max(x)-min(x))) }
#Data normalised according to function
BCD_Normalised <- as.data.frame(lapply(BCD_NoResults, FeatureScalling))
#Split data for training and testing doing 75:25 (ish) split
BCD_Train <- BCD_Normalised[1:450,]
BCD_Test  <- BCD_Normalised[451:569,]
#Compute k-value to use with the classifier. Rule of thumb is square root of n of observations
k_value <- floor(sqrt(length(BCD_Train[,1])))
#Now use KNN Algorithm in class package to classify data
BCD_Predictions <- knn(BCD_Train, BCD_Test, BCD_Noid[1:450,1], k=k_value)
#Reference data into dataframe
BCD_Reference <- BCD_Noid[451:569,1]
#Compare results
#Performance shown as TP,FP/FN,TN
table(BCD_Predictions,BCD_Reference)
