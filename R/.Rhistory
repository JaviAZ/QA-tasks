for(j in A){
if(i%%j == 0){
break
}
if(i >= sqrt(n)){
A <- c(A, i)
break
}
}
}
print(lengths(A))
A <- c()
n <- 100
for (i in 2:n){
for(j in A){
if(i%%j == 0){
break
}
if(i >= sqrt(n)){
A <- c(A, i)
break
}
}
}
print(A)
primeNumbers <- function(){
A <- c()
n <- 100
for (i in 2:n){
for(j in A){
if(i%%j == 0){
break
}
if(i >= sqrt(n)){
A <- c(A, i)
break
}
}
}
print(A)
}
primeNumbers()
A <- c()
n <- 100
for (i in 2:n){
prime = T
for(j in A){
if(i%%j == 0){
prime = F
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(A)
A <- c()
n <- 100
for (i in 2:n){
prime = T
for(j in A){
print(j)
if(i%%j == 0){
prime = F
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(A)
A <- integer()
n <- 100
for (i in 2:n){
prime = T
for(j in A){
print(j)
if(i%%j == 0){
prime = F
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(A)
A <- integer()
n <- 100
for (i in 2:n){
prime = T
for(j in A){
print(j)
if(i%%j == 0){
prime = F
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
append(A, i)
}
}
print(A)
?append
A <- c(2)
n <- 100
for (i in 2:n){
prime = T
for(j in A){
print(j)
if(i%%j == 0){
prime = F
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
append(A, i)
}
}
print(A)
A <- c(2)
n <- 100
for (i in seq(2:n)){
prime = T
for(j in A){
print(j)
if(i%%j == 0){
prime = F
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
append(A, i)
}
}
print(A)
A <- c(2)
n <- 100
for (i in 2:n){
prime = TRUE
for(j in A){
print(j)
if(i%%j == 0){
prime = FALSE
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
append(A, i)
}
}
print(A)
A <- c(2)
n <- 100
for (i in 2:n){
prime = TRUE
for(j in A){
print(j)
if(i%%j == 0){
prime = FALSE
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
print("Hello")
append(A, i)
}
}
print(A)
A <- c(2)
n <- 100
for (i in 2:n){
prime = TRUE
for(j in A){
print(j)
if(i%%j == 0){
prime = FALSE
break
}
if(i >= sqrt(n)){
break
}
}
if(prime){
print("Hello")
A <- c(A, i)
}
}
print(A)
A <- 2
n <- 100
for (i in 2:n){
prime = TRUE
for(j in A){
print(j)
if(i%%j == 0){
prime = FALSE
break
}
if(j >= sqrt(n)){
break
}
}
if(prime){
print("Hello")
A <- c(A, i)
}
}
print(A)
A <- 2
n <- 100
for (i in 2:n){
prime = TRUE
for(j in A){
if(i%%j == 0){
prime = FALSE
break
}
if(j >= sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(A)
A <- 2
n <- 2000000
for (i in 2:n){
prime = TRUE
for(j in A){
if(i%%j == 0){
prime = FALSE
break
}
if(j > sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(length(A))
rimeNumbers <- function(){
A <- 2
n <- 2000000
for (i in 2:n){
prime = TRUE
for(j in A){
if(i%%j == 0){
prime = FALSE
break
}
if(j > sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(length(A))
}
primeNumbers <- function(){
A <- 2
n <- 2000000
for (i in 2:n){
prime = TRUE
for(j in A){
if(i%%j == 0){
prime = FALSE
break
}
if(j > sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(length(A))
}
primeNumbers()
primeNumbers <- function(){
A <- 2
n <- 3000000
for (i in 2:n){
prime = TRUE
for(j in A){
if(i%%j == 0){
prime = FALSE
break
}
if(j > sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(length(A))
}
primeNumbers()
primeNumbers <- function(){
A <- 2
n <- 2000000000
for (i in 2:n){
prime = TRUE
for(j in A){
if(i%%j == 0){
prime = FALSE
break
}
if(j > sqrt(n)){
break
}
}
if(prime){
A <- c(A, i)
}
}
print(length(A))
}
primeNumbers()
chickWeightData <- function(){
chickAt21 <- ChickWeight[ChickWeight$Time == 21 ,]
chickAt0 <- ChickWeight[ChickWeight$Time == 0 ,]
chickAt0 <- chickAt0[-c(8,15,16,18,44),]
totalDiff <- chickAt21$weight - chickAt0$weight
diffWeight <- data.frame(totalDiff,chickAt21$Chick,chickAt21$Diet)
boxplot(diffWeight$totalDiff~diffWeight$chickAt21.Diet)
plot(ChickWeight$Time~ChickWeight$weight, pch = c(15,16,17,18)[ChickWeight$Diet], col=c("black","red","blue","green")[ChickWeight$Diet], type = "n")
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 1,]), col = "black", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 2,]), col = "red", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 3,]), col = "blue", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 4,]), col = "green", lwd = 4)
legend("bottomright", legend = unique(ChickWeight$Diet),pch = "-", col=c("black","red","blue","green"))
}
ChickWeightData()
chickWeightData <- function(){
chickAt21 <- ChickWeight[ChickWeight$Time == 21 ,]
chickAt0 <- ChickWeight[ChickWeight$Time == 0 ,]
chickAt0 <- chickAt0[-c(8,15,16,18,44),]
totalDiff <- chickAt21$weight - chickAt0$weight
diffWeight <- data.frame(totalDiff,chickAt21$Chick,chickAt21$Diet)
boxplot(diffWeight$totalDiff~diffWeight$chickAt21.Diet)
plot(ChickWeight$Time~ChickWeight$weight, pch = c(15,16,17,18)[ChickWeight$Diet], col=c("black","red","blue","green")[ChickWeight$Diet], type = "n")
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 1,]), col = "black", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 2,]), col = "red", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 3,]), col = "blue", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 4,]), col = "green", lwd = 4)
legend("bottomright", legend = unique(ChickWeight$Diet),pch = "-", col=c("black","red","blue","green"))
}
ChickWeightData()
chickAt21 <- ChickWeight[ChickWeight$Time == 21 ,]
chickAt0 <- ChickWeight[ChickWeight$Time == 0 ,]
chickAt0 <- chickAt0[-c(8,15,16,18,44),]
totalDiff <- chickAt21$weight - chickAt0$weight
diffWeight <- data.frame(totalDiff,chickAt21$Chick,chickAt21$Diet)
boxplot(diffWeight$totalDiff~diffWeight$chickAt21.Diet)
plot(ChickWeight$Time~ChickWeight$weight, pch = c(15,16,17,18)[ChickWeight$Diet], col=c("black","red","blue","green")[ChickWeight$Diet], type = "n")
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 1,]), col = "black", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 2,]), col = "red", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 3,]), col = "blue", lwd = 4)
abline(lm(Time~weight, data = ChickWeight[ChickWeight$Diet == 4,]), col = "green", lwd = 4)
legend("bottomright", legend = unique(ChickWeight$Diet),pch = "-", col=c("black","red","blue","green"))
setwd("~/")
setwd("C:\Users\Admin\Desktop\QAExercises\R")
getwd()
setwd("C:/Users/Admin/Desktop/QAExercises/R")
train <- read.csv("censusData_train.csv", header = FALSE)
train <- read.csv("censusData_train.csv", header = FALSE)
View(train)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
#train <- read.csv("censusData_train.csv", header = FALSE)
#colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
prop.table(table(train$Sex, train$Salary))
#train <- read.csv("censusData_train.csv", header = FALSE)
#colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
prop.table(table(train$Workclass, train$Salary))
prop.table(table(train$Sex, train$Salary))
table(train$Sex)
prop.table(table(train$Sex, train$Salary))
table(train$Sex)
table(train$Salary)
prop.table(table(train$Sex, train$Salary,1))
table(train$Sex)
table(train$Salary)
prop.table(table(train$Sex, train$Salary),1)
table(train$Sex)
table(train$Salary)
prop.table(table(train$Workclass,train$Salary),1)
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")] <- "Unemployed"
prop.table(table(train$Workclass,train$Salary),1)
train$Workclass[train$Workclass %in% c('?', 'Never-worked', 'Without-pay')] <- 'Unemployed'
train$Workclass[train$Workclass %in% c('?', 'Never-worked', 'Without-pay'),] <- 'Unemployed'
train$Workclass[,train$Workclass %in% c('?', 'Never-worked', 'Without-pay')] <- 'Unemployed'
train$Workclass[train$Workclass %in% c('?', 'Never-worked', 'Without-pay')] <- 'Unemployed'
train$Workclass[train$Workclass %in% c('?', 'Never-worked', 'Without-pay')]# <- 'Unemployed'
train$Workclass[train$Workclass %in% c('?', 'Never-worked', 'Without-pay'),]# <- 'Unemployed'
train$Workclass[,train$Workclass %in% c('?', 'Never-worked', 'Without-pay')]# <- 'Unemployed'
train[train$Workclass %in% c('?', 'Never-worked', 'Without-pay')]# <- 'Unemployed'
train[train$Workclass %in% c('?', 'Never-worked', 'Without-pay'),]# <- 'Unemployed'
train[,train$Workclass %in% c('?', 'Never-worked', 'Without-pay')]# <- 'Unemployed'
train[train$Workclass %in% c('?', 'Never-worked', 'Without-pay'),]# <- 'Unemployed'
train[[train$Workclass %in% c('?', 'Never-worked', 'Without-pay'),]]# <- 'Unemployed'
train[[train$Workclass %in% c('?', 'Never-worked', 'Without-pay')],]# <- 'Unemployed'
train$Workclass[train$Workclass %in% c('?', 'Never-worked', 'Without-pay')]# <- 'Unemployed'
train$Workclass[TRUE]# <- 'Unemployed'
train$Workclass[train$Workclass %in% c('?')]# <- 'Unemployed'
train$Workclass[train$Workclass == '?']# <- 'Unemployed'
train$Workclass[train$Workclass %in% c('?', 'Never-worked', 'Without-pay')]# <- 'Unemployed'
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")]# <- 'Unemployed'
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")]# <- 'Unemployed'
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] <- 'Unemployed'
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] <- ' Unemployed'
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] <- "Unemployed"
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] <- " Unemployed"
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] = "Unemployed"
?gsub
View(train)
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
prop.table(table(train$Sex, train$Salary),1)
table(train$Sex)
table(train$Salary)
prop.table(table(train$Workclass,train$Salary),1)
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] <- "Unemployed"
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
View(train)
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] <- " Unemployed"
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
View(train)
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")] <- " Without-pay"
?factor
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")]# <- " Without-pay"
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")]# <- " Without-pay"
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass[train$Workclass %in% c(" ?", " Never-worked", " Without-pay")]# <- " Without-pay"
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")]# <- " Without-pay"
train$Workclass <-  factor(train$Workclass,c(c.unique(train$Workclass),"Unemployed"))
train$Workclass <-  factor(train$Workclass,c(unique(train$Workclass),"Unemployed"))
View(train)
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass,c(unique(train$Workclass),"Unemployed"))
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(train$Workclass),"Unemployed"))
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
View(train)
train <- read.csv("censusData_train.csv", header = FALSE)
colnames(train) <- c("Age", "Workclass", "FinalWeight", "Education", "EducationNum", "MaritalStatus", "Occupation", "Relationship", "Race", "Sex","CapitalGain", "CapitalLoss", "HoursPerWeek","NativeCountry", "Salary")
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
summary(train)
str(train)
train$Workclass[train$Workclass %in% c("?", "Never-worked", "Without-pay")] <-"Unemployed"
View(train)
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass)),"Unemployed"))
prop.table(table(train$Workclass,train$Salary),1)
train$Workclass <-  factor(train$Workclass, levels = c(unique(as.character(train$Workclass))))
prop.table(table(train$Workclass,train$Salary),1)
prop.table(table(train$Age,train$Salary),1)
ages <- cut(train$Age, breaks = c(0,20,29, 36, 49,59,Inf), labels = c("17-20","21-29","30-36","37-49","50-59","60-90"))
agesVSSalary <- table(ages,train$Salary)
agesVSSalary
prop.table(table(agesVSSalary$ages,agesVSSalary$train.Salary))
prop.table(table(ages,train$Salary))
prop.table(table(ages,train$Salary),1)
print(unique(train$Education))
