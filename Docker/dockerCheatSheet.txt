Install docker and docker-compose in new vm
	1  sudo apt-get update
    2  sudo apt-get upgrade
    3  sudo apt install tree
    4  curl https://get.docker.com | sudo bash 
    5  sudo usermod -aG docker $(whoami)
    6  sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    7  sudo chmod +x /usr/local/bin/docker-compose
    8  restart console

Create Dockerfile
	sudo nano Dockerfile
build app
	without arguement
		docker build -t docker.io/javiaz/py_app:latest .
	with arguement
		docker build --build-arg [VARNAME]=[VALUE] -t docker.io/javiaz/py_app:latest .
run image in container publishing port 80
	docker run -d -p 80:80 javiaz/py_app
stop and remove all containers
	docker stop $(docker ps -qa)
	docker rm $(docker ps -qa)
View images
	docker images
View all processes 
	docker ps -a

docker network
				create
				rm
				list
		run -d --network test nginx
	   inspect networkname
jenkins network pass
	docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
	docker logs jenkins
change tag
	docker tag oldname newname
Create an NGINX container with the volume mounted to /usr/share/nginx/html in the container. Make
sure that you publish the port (80) 
	docker run -d -p 80:80 --mount source=webpage,destination=/usr/share/nginx/html nginx

log into container
	docker exec -it containername bash

docker databases
	docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=dbname --network dbname mysql:5.7



FLASK APP
	docker network create [net name]
	git clone [Flask app git repo]
	cd [folder of repo just cloned]
	[edit application/__init__.py SQL connection to: 'mysql+pymysql://root:password@mysql:3306/[net name]']
	sudo nano Dockerfile
		>FROM python:3.5.7
		>WORKDIR /application
		>RUN apt-get update
		>RUN pip3 install [py library]==[version]
		>...
		>RUN pip3 install virtualenv
		>RUN python -m virtualenv venv
		>ENV FLASK_APP=run.py
		>ENV FLASK_ENV=production
		>COPY . .
		>ENTRYPOINT ["/usr/local/bin/flask", "run", "--host=0.0.0.0"]
	sudo nano create.py
		>from application import db
		>db.drop_all()
		>from application.models import Users, Posts
		>db.create_all()
	docker build -t [dockerhub repo]/[app name] .
	docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=[net name] --network [net name] mysql:5.7
	docker run -d -p 5000:5000 --name app --network flask_app javiaz/simple_flask_app
	docker exec app python create.py



docker-compose
build container
	docker-compose up -d
build container with copies
	docker-compose up -d --scale [appname]=[number of containers]
stop containers and remove images
	docker-compose down --rmi all
app versions
	export APP_VERSION=v1
change to new version
	export APP_VERSION=v2
	docker-compose build --no-cache app
	docker-compose up -d app


docker in jenkins container
	create docker-compose.yaml
		
	docker-compose up -d jenkins
	docker exec -u root -it containername bash
	curl https://get.docker.com | bash 
	usermod -aG docker jenkins
	 curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    exit
    docker restart containername